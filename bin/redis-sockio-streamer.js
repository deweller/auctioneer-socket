// Generated by CoffeeScript 1.7.1

/*
 *
 * This simple server listens for publish messages on the redis auction channel
 * and then pushes those to the connected socket.io clients
 *
 */

(function() {
  var io, redis, redisHost, redisPort, socketioPort;

  socketioPort = process.env.SOCKET_IO_PORT || 8040;

  redisPort = process.env.REDIS_PORT_6379_TCP_PORT || 6379;

  redisHost = process.env.REDIS_PORT_6379_TCP_ADDR || '127.0.0.1';

  io = require("socket.io").listen(socketioPort);

  redis = require('redis');

  console.log("Will connect to redis at " + redisHost + ":" + redisPort);

  io.on("connection", function(socket) {
    var redisClient;
    console.log("connection made!");
    redisClient = redis.createClient(redisPort, redisHost);
    console.log("redis client created");
    socket.emit("status", {
      state: "connected"
    });
    socket.on("listen", function(auctionSlug) {
      console.log("subscribing to auction-" + auctionSlug);
      redisClient.subscribe("auction-" + auctionSlug);
      redisClient.on("message", function(channel, message) {
        console.log("heard " + message);
        socket.emit('auction-update', JSON.parse(message));
      });
      redisClient.on("error", function(e) {
        console.log("error", e);
        socket.emit("status", {
          state: "disconnected",
          desc: "server disconnected from auction " + auctionSlug
        });
      });
      redisClient.on("subscribe", function(channel) {
        console.log("subscribed to " + channel);
        socket.emit("status", {
          state: "listening",
          desc: "server connected to auction " + auctionSlug
        });
      });
    });
    socket.on('disconnect', function() {
      console.log("terminating connection");
      return redisClient.quit();
    });
  });

  return;

}).call(this);
